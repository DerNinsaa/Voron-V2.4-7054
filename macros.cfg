[gcode_macro PRINT_START]
description: Starts a Print, based on the Work of jontek2
gcode:
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
  {% set x_wait_2 = 70 %}
  {% set y_wait_2 = 350 %}
  {% set Z_OFFSET = params.Z_OFFSET|default(0)|float %}
  
  ChamberLED_ON
  SET_GCODE_OFFSET Z=0
  STATUS_HOMING
  G28
  G90

  BED_MESH_CLEAR

  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"
    STATUS_HEATING
    M106 S255

    SET_FAN_SPEED FAN=nevermore SPEED=0.8

    G1 X{x_wait} Y{y_wait} Z15 F9000
    M190 S{target_bed}
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"
    TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber" MINIMUM={target_chamber}

  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"
    STATUS_HEATING
    G1 X{x_wait} Y{y_wait} Z15 F9000
    M190 S{target_bed}
    SET_DISPLAY_TEXT MSG="Soak for 5 min"
    G4 P300000
  {% endif %}

  SET_DISPLAY_TEXT MSG="Hotend: 150c"
  M109 S150

  SET_DISPLAY_TEXT MSG="Leveling"
  STATUS_LEVELING
  QUAD_GANTRY_LEVEL
  G28 Z

  SET_DISPLAY_TEXT MSG="Bed mesh"
  STATUS_MESHING
  BED_MESH_CALIBRATE

  CARTOGRAPHER_TOUCH

  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"
  STATUS_HEATING
  G1 X{x_wait_2} Y{y_wait_2} Z15 F9000
  M107
  M109 S{target_extruder}
  SET_GCODE_OFFSET Z={Z_OFFSET}

  SET_DISPLAY_TEXT MSG="Printing..."
  SKEW_PROFILE LOAD=CaliFlower
  #SFS_ENABLE
  STATUS_PRINTING
  #LINE_PURGE

[gcode_macro PRINT_END]
description: Called at the end of the Print
gcode:
    G91
    G1 E-7 F900
    G0 Z5
    G90
    M104 S0
    M140 S0
    G92 E1
    G0 X175 Y10 F5000
    m84
    #SFS_DISABLE
    SET_SKEW CLEAR=1
    SET_GCODE_OFFSET z=0
    BED_MESH_CLEAR
    SET_FAN_SPEED FAN=nevermore SPEED=0
    SET_DISPLAY_TEXT MSG="Printing finished"
    STATUS_OFF
    
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    CLEAR_PAUSE
    PRINT_END
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause Macro, parks the Printhead Center Front
rename_existing: BASE_PAUSE
gcode:
    {% set z = params.Z|default(10)|int %}

    STATUS_BUSY
    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}

        #SET_FILAMENT_SENSOR SENSOR=SFS ENABLE=0
        SAVE_GCODE_STATE NAME=PAUSE
        BASE_PAUSE
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
            G91
            G1 Z{z} F900
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000
        SAVE_GCODE_STATE NAME=PAUSEPARK
        M104 S0
        SET_IDLE_TIMEOUT TIMEOUT=43200
    {% endif %}

[gcode_macro RESUME]
description: Resume Macro
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    {% set e = params.E|default(2.5)|int %}

    {% if printer['pause_resume'].is_paused|int == 1 %}
        #SET_FILAMENT_SENSOR SENSOR=SFS ENABLE=1
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
        {% if etemp > 0 %}
            M109 S{etemp|int}
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
        G91
        M83
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900
        {% else %}
            G1 Z{zhop * -1} F900
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
        STATUS_PRINTING                         
        BASE_RESUME
    {% endif %}

[gcode_macro M600]
description: Used for Slicers, Calls pause macro
gcode:
    PAUSE

# Macros for bigtreetechs Smart Filament Sensor (v1)

# [delayed_gcode DISABLEFILAMENTSENSOR]
# initial_duration: 1
# gcode:
#     SET_FILAMENT_SENSOR SENSOR=SFS ENABLE=0

# [gcode_macro SFS_ENABLE]
# description: Enable smart filament sensor
# gcode:
#     M118 ENABLING the Smart Filament Sensor
#     G92 E0
#     SET_FILAMENT_SENSOR SENSOR=SFS ENABLE=1

# [gcode_macro SFS_DISABLE]
# description: Disable smart filament sensor
# gcode:
#     M118 DISABLING the Smart Filament Sensor
#     G92 E0
#     SET_FILAMENT_SENSOR SENSOR=SFS ENABLE=0

# Macros for Spoolman

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

[idle_timeout]
timeout: 1200
gcode:
  BACKUP_CFG
  LOG_ROLLOVER
  ChamberLED_OFF

[gcode_macro ChamberLED_ON]
description: "Schaltet die Chamber Lighting ein (wei√ü)"
gcode:
  SET_LED LED=Chamber_Lighting RED=0 GREEN=0 BLUE=0 WHITE=1

[gcode_macro ChamberLED_OFF]
description: "Schaltet die Chamber Lighting aus"
gcode:
  SET_LED LED=Chamber_Lighting RED=0 GREEN=0 BLUE=0 WHITE=0
